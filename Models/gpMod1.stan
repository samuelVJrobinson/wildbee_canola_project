functions { 
  /* compute a latent Gaussian process - function generated by brms  
   *	This *should* be faster than inverting a 300x300 matrix each iteration
   *   x: array of continuous predictor values
   *   sdgp: marginal SD parameter
   *   lscale: length-scale parameter
   *   zgp: vector of independent standard normal variables 
   *   delta0: small number to make matrix positive-definite
   * Returns:  
   *   a vector to be added to the linear predictor
   */ 
  vector gp(vector x, real sdgp, real lscale, vector zgp) {
    matrix[rows(x), rows(x)] cov; //Declare covariance matrix
	real x_act[rows(x)];
	for(i in 1:rows(x)){ //This is a weird work-around that allows x to be defined as a row vector.
		x_act[i]=x[i];
	}		
    cov = cov_exp_quad(x_act, sdgp, lscale) + diag_matrix(rep_vector(1e-9, rows(x))); // deal with numerical non-positive-definiteness    	
    return cholesky_decompose(cov) * zgp; //Decomposed covariance matrix * unit normals
  }
} 
data {
	int<lower=1> N; //Number of data points
	int<lower=1> Nsite; //Number of sites
	int<lower=1> NperSite[Nsite]; //Number of data points per site
	int<lower=0> count[N]; //Number of bees
	int<lower=1> site[N]; //Site index	
	vector[N] traplength; //Traplength offset (in weeks)
	vector[N] centDate; //Day of year		
}
parameters {
	//Params for GP
	real<lower=0> rho; //Length-scale: how fast does correlation decay with distance
	real<lower=0> alpha; //Max covariance b/w points aka marginal SD parameter		
	vector[N] eta; //Unit normals
	//Fixed effects
	real b0; //"Global intercept" - mean for poisson process	
	real<lower=0> b0sd; //SD for global intercept
	real b0site[Nsite]; //site intercept	
}

model {  		
	vector[N] mu = rep_vector(0, N); //0 vector + b0	
	int pos = 1; //First position in vector		
	for(i in 1:Nsite){ //Adds mu to gaussian process for each 
		mu[pos:NperSite[i]+pos-1] =  b0 + b0site[i] + gp(centDate[pos:NperSite[i]+pos-1], alpha, rho, eta[pos:NperSite[i]+pos-1]); 
		pos=pos+NperSite[i]; //Increment position
	}	
	//Priors	
	//Gaussian process
	rho ~ gamma(3, 0.2); //Length-scale
	alpha ~ gamma(2, 0.2); //Max covariance		
  	eta ~ normal(0,1); //Unit normals
	
	//Fixed effects 		
	b0 ~ normal(0,5); //Hyperprior for the site mean ("global intercept")
	b0sd ~ gamma(1.1,1); //Hyperprior for the site SD 
	b0site ~ normal(0,b0sd); //Prior for site (difference from global intercept)
		
	//Likelihood - old method
	count ~ poisson_log(mu+log(traplength));	
}
