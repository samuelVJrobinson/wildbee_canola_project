#Model of count of A. terminalis using negative binomial GLMM framework, but with Gaussian process among sites
#NOTE: Negative binomial dist. in BUGS is the mathematicians NB (Pascal), not the one used by ecologists (Polya)
#Therefore we need to construct the negative binomial distribution in some other way. 
#Recall that one way the negative binomial distribution arises in practice is as a nonhomogeneous Poisson process 
#	in which the rate parameter lambda has a gamma distribution. In a homogeneous Poisson process the Poisson rate constant
#	lambda is the same for all observational units. In a nonhomogeneous Poisson process the rate constant is allowed to 
#	vary according to some distribution. Given a particular realization from this distribution, say, the resulting
#	random variable X will have a Poisson distribution with lambda=lambda. 
#https://www.unc.edu/courses/2008fall/ecol/563/001/docs/lectures/lecture14.htm
model {
  
  #Hyperpriors
  alpha.mean ~ dunif(-10,10)
  alpha.sd ~ dunif(0,10)
  alpha.prec <- 1 / (alpha.sd*alpha.sd)
  
  #Priors
  # alpha ~ dnorm(0,0.001) #Prior for intercept
  beta ~ dnorm(0,0.001) #Prior for slope
  logtheta ~ dnorm(0,0.1) #Hyperprior for dispersion parameter
  theta <-exp(logtheta) #Transform
  
  #Generate random intercept for each site
  for (i in 1:Nsite){
    alpha[i] ~ dnorm(alpha.mean,alpha.prec)
			
  }
  
  # Likelihood  
  for(i in 1:N){ #For each sample...
  	r[i] ~ dgamma(theta,theta) #NB dispersion parameter
	
	#Model lambda*r (mustar) as linear function of centDate, using traplength as an offset	
	log(lambda[i])<-log(traplength[i])+alpha[site[i]]
	mustar[i]<-lambda[i]*r[i]
	#Model actual count
	count[i]~dpois(mustar[i])		
	
	#Absolute residual
    res[i] <- abs(count[i] - mustar[i])
    #Generate new dataset
    count.new[i] ~ dpois(mustar[i])
    res.new[i] <- abs(count.new[i] - mustar[i])
	
	
  }
  
  #Derived parameters for posterior predictive check
  fit <- sum(res[])
  fit.new <- sum(res.new[])
  
}